[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mirex-auto-improver"
version = "0.2.0"
description = "MIR Algorithm Evaluation and AI-driven Improvement Platform"
authors = [{ name = "Romot"}]
readme = "README.md"
requires-python = ">=3.8,<3.11"
license = { text = "Unlicense" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["mir", "music information retrieval", "ai", "optimization", "evaluation"]

dependencies = [
    "numpy>=1.26.4,<2.0",
    "scipy>=1.12.0",
    "python-dotenv>=1.0.0",
    "librosa>=0.11.0",
    "matplotlib>=3.10.1",
    "mir_eval>=0.8.1",
    "pandas>=2.2.3",
    "scikit-learn>=1.4.1.post1",
    "tqdm>=4.66.1",
    "pydantic>=2.5.3",
    "soundfile>=0.12.1",
    "seaborn>=0.13.2",
    "PyYAML>=6.0.1",
    "requests>=2.31.0",
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.24.0",
    "pillow>=10.1.0",
    "typer[all]>=0.9.0",
    "tenacity>=8.2.3",
    "httpx>=0.27.0",
    "websockets>=11.0",
    "rich>=13.7.0",
    "mcp>=1.6.0",
    "aiosqlite>=0.19.0",
    "jinja2>=3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "black>=24.4.0",
    "isort>=5.13.2",
    "ruff>=0.1.9",
    "types-requests",
    "types-PyYAML",
]
numba = ["numba>=0.59.0"]
crepe = ["crepe>=0.0.16"]
pyaudio = ["pyaudio"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
plugins = ["pytest_asyncio"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
pythonpath = [".", "src"]
addopts = [
    "-ra",                # Show extra test summary info
    "-q",                 # Quiet mode (less verbose)
    "--cov=src",          # Measure coverage for the src directory
    "--cov=mcp_server_logic", # Measure coverage for mcp_server_logic
    "--cov-report=term-missing", # Show missing lines in the terminal report
    "--cov-report=xml"   # Generate XML report (for CI/external tools)
    # "--cov-fail-under=70" # Fail if coverage drops below 70% (adjust as needed)
]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore::pluggy.PluggyTeardownRaisedWarning"
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "UP", "B", "C4", "T20"]
exclude = ["tests/data/*.json"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["mirex_auto_improver", "src"]

[tool.uv]
package = true
editable = true

# GUDHIのようなパッケージはビルド時に問題が発生する可能性があるため、
# ビルド分離を無効化するパッケージを設定
no-build-isolation-package = []

# 依存関係のメタデータを事前に提供（オプション）
# [[tool.uv.dependency-metadata]]
# name = "gudhi"
# version = "3.8.0"
# requires-dist = []
